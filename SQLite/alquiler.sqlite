PRAGMA foreign_keys = on;
drop table if exists agendaDuenio;
drop table if exists agendaArrendatario;
drop table if exists alquiler;
drop table if exists agenda;
drop table if exists casa;
drop table if exists duenio;
drop table if exists arrendatario;
create table arrendatario(
	dni TEXT,
	nombre TEXT,
	primary key (dni));
create table duenio(
	dni TEXT,
	nombre TEXT,
	primary key (dni));
create table casa(
	id INTEGER,
	direccion TEXT,
	duenio TEXT not null,
	primary key (id),
	foreign key (duenio) references duenio (dni) on update cascade on delete restrict);
create table agenda(
	num INTEGER ,
	primary key(num));
create table alquiler(
	arrendatario TEXT,
	casa INTEGER,
	fechaD TEXT
	fechaH TEXT,
	deuda INTEGER,
	primary key (arrendatario, casa),
	foreign key (arrendatario) references arrendatario (dni) on update cascade on delete restrict,
	foreign key (casa) references casa (id) on update cascade on delete restrict);
create table agendaArrendatario(
	arrendatario TEXT,
	telefono INTEGER,
	primary key (arrendatario, telefono),
	foreign key (arrendatario) references arrendatario (dni) on update cascade on delete restrict,
	foreign key (telefono) references agenda (num) on update cascade on delete restrict);
create table agendaDuenio(
	duenio TEXT,
	telefono INTEGER,
	primary key (duenio, telefono),
	foreign key (duenio) references duenio (dni) on update cascade on delete restrict,
	foreign key (telefono) references agenda (num) on update cascade on delete restrict);


create trigger bi_agenda 
before insert on agenda
for each row
BEGIN
	select RAISE(abort, "Error")
;END;

create trigger bi_alquiler 
before insert on alquiler
for each row
BEGIN
	-- La fecha desde debe de ser menor que  hasta
	select case when not date(new.fechaD) > date(new.fechaH) then
		RAISE(abort, 'Error')
	END;
	select case when (select * from alquiler where new.fechaD < fechaD and new.fechaH >= fechaD and new.id = id) then
		RAISE(abort, 'Error')
	END;
	select case when (select * from alquiler where new.fechaD >= fechaD and new.fechaH >= fechaD and new.id = id) then
			RAISE(abort, 'Error')
	END;
	-- Moroso	0
	select case when (select new.dni in (select dni from alquiler where deuda > 0))
	RAISE(abort, 'Error')
	END;
END;

create trigger bu_alquiler 
before update on alquiler
for each row
BEGIN
	
	-- La fecha desde debe de ser menor que la hasta
	select case when date(new.fechaD) > date(new.fechaH) then
		RAISE(abort, "Error")
;END;

create trigger bi_arrendatario
before insert on arrendatario
for each row
when new.nombre glob '*[0-9]*'
BEGIN
	

	select RAISE(abort, "Error")
	
;END;

create trigger bu_arrendatario
before update on arrendatario
for each row
when new.nombre glob '*[0-9]*'
BEGIN
	

	select RAISE(abort, "Error")
	
;END;


